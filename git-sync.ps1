# Script de synchronisation Git automatique (PowerShell)
# Fait un pull si possible, sinon push les modifications locales

Write-Host "üîÑ Synchronisation Git en cours..." -ForegroundColor Cyan

# V√©rifier si on est dans un d√©p√¥t Git
try {
    git rev-parse --git-dir 2>&1 | Out-Null
    if ($LASTEXITCODE -ne 0) {
        throw "Pas dans un d√©p√¥t Git"
    }
} catch {
    Write-Host "‚ùå Erreur: Pas dans un d√©p√¥t Git" -ForegroundColor Red
    exit 1
}

# R√©cup√©rer les informations du remote
Write-Host "R√©cup√©ration des informations du remote..." -ForegroundColor Gray
git fetch

# V√©rifier s'il y a des modifications locales
$status = git status -s
if ($status) {
    Write-Host "üìù Modifications locales d√©tect√©es" -ForegroundColor Yellow
    $hasLocalChanges = $true
} else {
    Write-Host "‚úì Pas de modifications locales" -ForegroundColor Green
    $hasLocalChanges = $false
}

# V√©rifier si on est en avance/retard par rapport au remote
$local = git rev-parse "@"
$remote = git rev-parse "@{u}" 2>$null
$base = git merge-base "@" "@{u}" 2>$null

if (-not $remote) {
    Write-Host "‚ö†Ô∏è  Pas de branche remote configur√©e" -ForegroundColor Yellow
    exit 1
}

if ($local -eq $remote) {
    Write-Host "‚úì D√©j√† √† jour avec le remote" -ForegroundColor Green

    if ($hasLocalChanges) {
        Write-Host "üì§ Push des modifications locales..." -ForegroundColor Cyan
        git add .
        $commitMsg = Read-Host "Message de commit"
        if ([string]::IsNullOrWhiteSpace($commitMsg)) {
            $commitMsg = "Update $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        }
        git commit -m $commitMsg
        git push
        Write-Host "‚úÖ Modifications push√©es avec succ√®s" -ForegroundColor Green
    }
} elseif ($local -eq $base) {
    Write-Host "üì• Pull des modifications distantes..." -ForegroundColor Cyan
    git pull
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Pull effectu√© avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur lors du pull" -ForegroundColor Red
        exit 1
    }
} elseif ($remote -eq $base) {
    Write-Host "üì§ Push des modifications locales..." -ForegroundColor Cyan

    if ($hasLocalChanges) {
        git add .
        $commitMsg = Read-Host "Message de commit"
        if ([string]::IsNullOrWhiteSpace($commitMsg)) {
            $commitMsg = "Update $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        }
        git commit -m $commitMsg
    }

    git push
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Modifications push√©es avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur lors du push" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚ö†Ô∏è  Divergence d√©tect√©e entre local et remote" -ForegroundColor Yellow
    Write-Host "Veuillez r√©soudre manuellement (pull puis push, ou rebase)" -ForegroundColor Yellow
    exit 1
}

Write-Host "üéâ Synchronisation termin√©e" -ForegroundColor Green
